import{useState as E,useRef as F,useEffect as R}from"react";import{useMediaQueryScreen as $}from"../../../hooks/id-useMediaQueryScreen.js";import{useFloating as A,offset as C,arrow as D,autoUpdate as L}from"@floating-ui/react-dom";import{Tooltip as P,Arrow as Q}from"./id-styles.js";import{jsxs as f,Fragment as U,jsx as X}from"react/jsx-runtime";const G=({render:u,tooltipContent:m,tooltipStyles:p={},placement:d,offset:t,strategy:h,middlewares:w=[]})=>{const[n,g]=E(!1),a=F(null),{x:r,y:o,reference:x,floating:y,strategy:T,update:l,refs:e,middlewareData:S,placement:v}=A({placement:d||"top",strategy:h,middleware:[C(t!=null?t:10),...w,D({element:a})]}),{x:s,y:i}=S.arrow||{},{status:M}=$("(hover: hover)"),c=(j=!0)=>{M&&g(j)};R(()=>{if(!(!e.reference.current||!e.floating.current))return L(e.reference.current,e.floating.current,l)},[n,l]);const b={top:"bottom",right:"left",bottom:"top",left:"right"}[v.split("-")[0]];return f(U,{children:[u({ref:x,onMouseEnter:()=>c(),onMouseLeave:()=>c(!1)}),n&&f(P,{ref:y,style:{position:T,top:o!=null?o:0,left:r!=null?r:0,...p},children:[m,X(Q,{ref:a,style:{left:s!=null?`${s}px`:"",top:i!=null?`${i}px`:"",[b]:"-3px"}})]})]})};export{G as TextTooltipContainer};
