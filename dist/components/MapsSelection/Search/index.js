import{useRef as h,useEffect as y}from"react";import{useGoogleMapCtx as C}from"../context/index.js";import{BaseInput as x}from"../../forms/BaseInput/index.js";import{SearchIcon as I}from"../../../icons-v2/SearchIcon/index.js";import{CloseIcon as _}from"../../../icons-v2/CloseIcon/index.js";import{CloseWrapper as b}from"./styles.js";import{jsx as o}from"react/jsx-runtime";const M=({onError:c,inputProps:m={}})=>{const{map:r,editedAddressRef:p,setMapCenter:u,setCoordinates:f,setAddressState:g}=C(),t=h(null);return y(()=>{if(!r.loaded)return;const s=new r.api.places.Autocomplete(t.current);return s.addListener("place_changed",()=>{var i,d;const e=s.getPlace(),a=(i=e==null?void 0:e.address_components)==null?void 0:i.find(n=>n.types.includes("locality"));if(!((d=e.geometry)!=null&&d.location)){const{name:n}=e;c&&n&&c(`No se encontaron detalles disponibles para: "${n}"`,n);return}const l={lat:e.geometry.location.lat(),lng:e.geometry.location.lng()};g({...l,address:e.formatted_address,locality:a==null?void 0:a.long_name}),u(e.geometry),f(l),t.current.value="",p.current=!0}),s.bindTo("bounds",r.instance),()=>{t.current&&r.api.event.clearInstanceListeners(t.current)}},[r]),o(x,{startEl:o(I,{size:13}),endEl:o(b,{onClick:()=>{t.current.value=""},children:o(_,{})}),inputRef:t,placeholder:"Ingresa una direcci\xF3n",...m})};export{M as Search};
